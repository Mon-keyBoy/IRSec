#!/bin/bash

# Ensure a user was provided as an argument
if [ -z "$1" ]; then
  echo "No user provided. Please provide a username as a parameter."
  echo "Usage: sudo ./your_script.sh username"
  exit 1
fi

  # Set the user to the provided parameter
USER_NAME="$1"

# Ensure the script is run as root
if [ "$EUID" -ne 0 ]; then
    echo "Please run as root"
    exit
fi

#ND-- list of packages to go over
essential_packages=( # List of essential packages to reinstall (can be customized based on competition needs)

    "coreutils"         # Basic file, shell, and text manipulation utilities
    "bash"              # The Bourne Again Shell
    "sudo"              # Allows users to run commands as root
    "openssl"           # Cryptographic toolkit
    "openssh-server"    # SSH server for remote access
    "util-linux"        # System utilities (fdisk, mount, etc.)
    "procps"            # Utilities related to processes (ps, top, etc.)
    "net-tools"         # Network tools (ifconfig, netstat, etc.)
    "iptables"          # Firewall management tool
    "passwd"            # Password management utility
    "gnupg"             # GnuPG for signing and encryption
    "findutils"         # File finding utilities (find command)
    "grep"              # Searches for patterns in files
    "gawk"              # Text processing
    "sed"               # Stream editor for text manipulation
    "curl"              # Data transfer tool
    "wget"              # Data transfer tool
    "tar"               # Archiving utility
    "gzip"              # Compression utility
    "login"             # User login tools (whoami, who)
    "cron"              # Task scheduler
    "systemd"           # System and service manager (includes systemctl)
    "openssh-client"    # SSH client for secure access
    "mount"             # Filesystem mount tools
    "acl"               # Access control utilities (chmod, chown)
    "inetutils-ping"    # Ping utility
    "lsb-release"       # System information (uname)
    "iproute2"          # Networking utilities (ip, ss)



)

# Create directories to store copies of config files and dependencies
mkdir -p /home/$USER_NAME/Desktop/binary_configs_cp_v1
mkdir -p /home/$USER_NAME/Desktop/binary_dependencies_cp_v1

for package in "${essential_packages[@]}"; do
    echo "Processing package: $package"

    # Step 1: Copy configuration files BEFORE reinstalling
    echo "Copying configuration files for $package..."
    config_files=$(dpkg-query -L "$package" 2>/dev/null | grep -E '/etc|/usr/share')  # Filter for common config locations
    for config_file in $config_files; do
        if [ -f "$config_file" ]; then
            echo "Copying $config_file to /home/$USER_NAME/Desktop/binary_configs_cp_v1"
            cp --parents "$config_file" /home/$USER_NAME/Desktop/binary_configs_cp_v1
            chmod -x /home/$USER_NAME/Desktop/binary_configs_cp_v1/"$(basename "$config_file")"
        fi
    done

    # Step 2: Copy dependencies BEFORE reinstalling
    echo "Copying dependencies for $package..."
    dependencies=$(apt-cache depends "$package" | grep Depends | sed "s/.*ends:\ //" | tr '\n' ' ')

    for dep in $dependencies; do
        dep_files=$(dpkg-query -L "$dep" 2>/dev/null)
        for dep_file in $dep_files; do
            if [ -f "$dep_file" ]; then
                echo "Copying $dep_file to /home/$USER_NAME/Desktop/binary_dependencies_cp_v1"
                cp --parents "$dep_file" /home/$USER_NAME/Desktop/binary_dependencies_cp_v1
                chmod -x /home/$USER_NAME/Desktop/binary_dependencies_cp_v1/"$(basename "$dep_file")"
            fi
        done
    done

    # Step 3: Reinstall the configuration files
    echo "Reinstalling configuration files for $package..."
    apt-get install --reinstall -o Dpkg::Options::="--force-confask" -y "$package"

    # Step 4: Reinstall the packageâ€™s dependencies
    echo "Reinstalling dependencies for $package..."
    apt-get install --reinstall --download-only -y $dependencies

    echo "Reinstallation of configuration files and dependencies complete for $package."
done

cd /home/$USER_NAME/DesktopDesktop/
rm reinstall_config_files
echo "Reinstallation of configuration files and dependencies complete."


